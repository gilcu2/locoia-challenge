[project]
name = "locoia-challenge"
version = "0.1.0"
description = ""
authors = [
    {name = "Reynaldo Gil",email = "gilcu2@mail.com"}
]
readme = "README.md"
requires-python =  ">=3.12,<4.0"


[tool.poetry.dependencies]
flask ="^3.1.0"
requests = "^2.32.3"
gunicorn = "^23.0.0"
ruff = "^0.9.9"
pydantic = "^2.10.6"
flask-restx = "^1.3.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.5"
pytest-httpx = "^0.35.0"
pytest-mock = "^3.14.0"
pytest-sugar = "*"
pytest-xdist = "*"
pytest-timeout = "*"
autoflake = "*"
black = "*"
flake8-bugbear = "*"
flake8-builtins = "*"
flake8-comprehensions = "*"
flake8-debugger = "*"
flake8-eradicate = "*"
flake8-logging-format = "*"
isort = "*"
mkdocstrings = "*"
mkdocs-material = "*"
pep8-naming = "*"
pre-commit = "*"
pymdown-extensions = "*"
pytest-github-actions-annotate-failures = "*"
python-kacl = "*"
pyupgrade = "*"
mypy = "^1.15.0"
requests-mock = "^1.12.1"
types-requests = "^2.32.0.20250301"
pytest-cov = "^6.0.0"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
package-mode = false

[tool.pytest.ini_options]
pythonpath = [
    "."
]

[tool.isort]
profile = "black"
src_paths = ["gistapi", "tests"]

[tool.black]
target-version = ["py312"]
include = '\.pyi?$'


[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 100
indent-width = 2

# Assume Python 3.9
target-version = "py312"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"
